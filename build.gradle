plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'com.monkeypenthouse'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.modelmapper:modelmapper:2.4.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'com.google.guava', name: 'guava', version: '28.1-jre'
	implementation group: 'org.msgpack', name: 'jackson-dataformat-msgpack', version: '0.8.18'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
	implementation group: 'org.apache.commons', name: 'commons-text', version: '1.8'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
	runtimeOnly 'mysql:mysql-connector-java'

	// Redisson 관련 의존성
	implementation 'org.redisson:redisson-spring-boot-starter:3.17.1'

	// jwt 관련 의존성
	compileOnly 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// sms 인증 관련 의존성`
	implementation group: 'net.nurigo', name: 'javaSDK', version: '2.2'

	// 소셜 로그인을 위한 OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:2.5.5'

	// aws cloudfront
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.1.RELEASE'
	implementation 'net.java.dev.jets3t:jets3t:0.9.4'
	implementation 'org.bouncycastle:bcprov-jdk16:1.46'

	// queryDSL
	implementation "com.querydsl:querydsl-core:4.4.0"
	implementation "com.querydsl:querydsl-jpa:4.4.0"
	annotationProcessor(
			"jakarta.persistence:jakarta.persistence-api",
			"jakarta.annotation:jakarta.annotation-api",
			"com.querydsl:querydsl-apt:4.4.0:jpa")

	// Swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
}

sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

build {
	build
}

jar {
	enabled = false
}

bootRun {
	String activeProfile = System.properties['spring.profiles.active']
	systemProperty "spring.profiles.active", activeProfile
}